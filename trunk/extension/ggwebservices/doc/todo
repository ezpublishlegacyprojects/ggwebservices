- test + fix: when using REST server via ws/execute, the method name should come frome eZ to havoid having different URI parsing

- test: using CURL and proxy / complex auths works?

- add to the base client:
  + cookie support
  + send($array) with keepalive (both curl & by hand)
  + rebuilding of $_POST for compressed requests containing form data

- add to ezwsclient support for auth type, proxy auth type, other options...

- add support for limiting access to webservices by incoming IP address (often done for stupid ws clients that cannot login)

- add ezjscore client, request, response classes

- in debugger:
  + add siteaccess choice for local server on the left-hand col (nb: looks like getting correct urls for other sa is quite hard... langswitcher does it for nodes only?)
  + add soap, rest support
  + allow to hide/show client's options
  + add nr. of total ws methods found when asking for list of methods
  + improve formatting (eg. 1st line, visualeditor space on top, add admin2 tpl for left menu with resizing handle, etc...)
  + allow picking preferred content-type for responses when using ezjscore

- flesh out soap server w. wsdl support (use ezpo2xsd method from ezpo_insepctor)

- test fix 4 bug: "url for local server in debugger is wrong when using forcevhost w.out rewriting rules (also without forcevhost?)"

- add jsonrpc 2.0 support

- test objects vs. array return by default with ezsoap (in tpl code especially)

- add support for post parameters in REST requests, also use a get/post var for method name instead of path

- add support for post vars in REST server (how to tell them apart from GET? also nb: must support compressed requests)

- add 'plain' xml format to REST server. see eg http://snipplr.com/view/3491/convert-php-array-to-xml-or-simple-xml-object-if-you-wish/
  or http://svn.php.net/viewvc/pear/packages/XML_Serializer/trunk/XML/Serializer.php?revision=294967&view=markup

- add some doc showing the client/request/response and server/request/response interaction to make it easier to remember that requests are also used server-side (and responses client-side)

- test support for calling jscore and plain-registered methods with index_ajax controller; test again custom controller too

- add siteaccess limitation to proxy view

- add example tpl usage for Y.io.jsonrpc file

- verify js changes in Y.io.ez from 1.0.0 to 1.0.2 and 1.1.0 and merge in Y.io.jsonrpc
  + test loading Y.io.ez from Yui 3.1.0 in eZP 4.4 and later

- use ezjscore to load yui 3 in debugger <= upgrade debugger to yu 2in3

- test https support with and without curl, with and without proxy too

- test module view that does ws execution (memory, time) vs. using jsonrpc.php vs. index_ajax.php

- add a soap controller based on ggphpsoap instead of ezsoap (needs a server class first)

- finish proxy module
  => add soap support. Need to create a new soap server class, too?
  => add POST/GET (rest) support. Need to create a new server class, too? nb: could do with basically json/php serialized/ encoding of results (see solr-supported formats too)
  => add fine-grained policy control with per_server_per_method limitations (this one needs server to support listMethods() call), possibly per_siteaccess?

- allow ws controllers to operate in no-session mode (useful? since 4.4 whole of eZ can be sessionless)

- add a new controller file capable to do multi-protocol requests
  + make it also compatible with ezsjcore

- add optional extended logging of received ws calls and outgoing responses (use ezdebugsettings or a custom log file?)

- lobby ezjscore to provide list of exposed methods, api docs

- add phpdoc-generated api docs to the distribution

- improve input parameter type validation

- add a compatibility layer to import webservices designed for ezrest too

- move debugger to ez (yui?) classes and remove the phpxmlrpc lib

- add js-based debugger for calls to local server

- add a testsuite (eg. to test all the error codes after shuffling them around)

- allow extension ro run on phpxmlrpc/phpjsonrpc/nusoap if php extensions are missing

- add support for curl multi calls to execute multiple calls in parallel
