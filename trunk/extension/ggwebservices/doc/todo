- test fix 4 bug: "url for local server in debugger is wrong when using forcevhost w.out rewriting rules (also without forcevhost?)"

- in debugger:
  + add siteaccess choice for local server on the left-hand col (nb: looks like getting correct urls for other sa is quite hard... langswitcher does it for nodes only?)
  + add a button to add session cookie to requests - or at least a help text
  + add soap, rest, ezjscore support
  + allow to hide/show client's options
  + add nr. of total w methods found when asking for list of methods

- flesh out soap server w. wsdl support (and ezpo2xsd method)

- test objects vs. array return by default with ezsoap (in tpl code especially)

- move debugger to standard design, so that it can be used in frontends too

- test support for calling jscore and plain-registered methods with index_ajax controller; test again custom controller too

- add cookie support in the http client

- add ezjscore client as subclass of ggpostclient

- add siteaccess limitation to proxy view

- add example tpl usage for Y.io.jsonrpc file

- verify js changes in Y.io.ez from 1.0.0 to 1.0.2 and 1.1.0 and merge in Y.io.jsonrpc

- use ezjscore to load yui 3 in debugger <= upgrade debugger to yui3

- test https support with and without curl, with and without proxy too

- test module view that does ws execution (memory, time) vs. using jsonrpc.php vs. index_ajax.php

- add a soap controller based on ggphpsoap instead of ezsoap (needs a server class first)

- finish proxy module
  => add soap support. Need to create a new soap server class, too?
  => add POST/GET (rest) support. Need to create a new server class, too? nb: could do with basically json/php serialized/ encoding of results (see solr-supported formats too)
  => add fine-grained policy control with per_server_per_method limitations (this one needs server to support listMethods() call), possibly per_siteaccess?

- allow ws controllers to operate in no-session mode

- add a new controller file capable to do multi-protocol requests
  + make it also compatible with ezsjcore

- add optional extended logging of received ws calls and outgoing responses (use ezdebugsettings or a custom log file?)

- lobby ezjscore to provide list of exposed methods, api docs

- add phpdoc-generated api docs to the distribution

- improve input parameter type validation

- add a compatibility layer to import webservices designed for ezrest too

- move debugger to ez (yui?) classes and remove the phpxmlrpc lib

- add js-based debugger for calls to local server

- add a testsuite (eg. to test all the error codes after shuffling them around)

- allow extension ro run on phpxmlrpc/phpjsonrpc/nusoap if php extensions are missing

- add support for curl multi calls to execute multiple calls in parallel
