<?php /*

[GeneralSettings]

# Logging of outgoing webservice calls
# levels are: info, notice, debug, warning, error, critical, none
Logging=warning
# maximum size of logfiles before they are rotated: 2MB ( 2 * 1024 * 1024)
MaxLogSize=2097152
# maximum number of rotated log files to be kept
MaxLogrotateFiles=3

# Incoming webservice calls
# If enabled, the instance's default siteaccess will always be used.
# If disabled, the matched siteaccess (host, port, etc) will be used, allowing
# the usage of webservices when multiple ezpublish websites are hosted on one instance
# NB: this is only valid when using the custom controller files, not when using
# the 'webservices/execute' view
UseDefaultAccess=enabled

# enable reception of incoming webservice calls
EnableJSONRPC=true
EnableXMLRPC=true
EnableREST=true
# always register all php functions declared as webservice methods regardless
# of incoming call protocol, ie. allow code in the 'xmlrpc' dir to be accessed
# via jsonrpc or rest calls and viceversa
RegisterAllProtocolsFunctions=disabled
# enable reception of webservice calls for those php or template functions
# that have been registered as ezjscore methods
# (those will be made available via the 'webservices/execute' view, using either
# jsonrpc and/or xmlrpc depending on the settings EnableJSONRPC and EnableXMLRPC)
JscoreIntegration=enabled

[DebuggerSettings]
# The version of the YUI library to be used for displaying the debug tree.
# NB: this extension comes with version 2.5.0, but the ezjscore extension might
# come with versions 2.7.0, 2.8.1 or others. If you are having conflicts because
# of loading YUI components from different directories/versions, you can try
# fiddling with this setting.
# Besides a version number, the string "ezjscore" is accepted - in that case the
# version of YUI2 from the installed ezjscore extension will be used, whatever
# it might be.
PreferredVersion[yui2]=2.5.0

[ExtensionSettings]
# list of extensions providing webservice functionality
JSONRPCExtensions[]
JSONRPCExtensions[]=ggwebservices
XMLRPCExtensions[]
XMLRPCExtensions[]=ggwebservices

### definition of webservice servers that can be called by template or php code

#[myserver]

# mandatory variables
#providerType=JSONRPC, SOAP, PhpSOAP, REST or XMLRPC
#providerUri=http://my.test.server/wsendpoint.php

# deprecated variables. Use Options[] instead
#providerUsername=
#providerPassword=
#timeout=60

# optional variables
#Options[]
#Options[timeout]=60
#Options[login]=...
#Options[password]=...
#Options[authType]=1(basic), 2(digest), 4(GSS-Negotiate), 8(NTLM), 16(Digest with IE flavour)
#Options[requestCompression]=gzip, deflate. Useful only when the php zlib extension is enabled AND if the server supports compressed requests!
#Options[acceptedCompression]=gzip, deflate or 'gzip, deflate'. Set it to empty string to disable, as it is automatically enabled when the php zlib extension is enabled
#Options[forceCURL]=0 or 1 to force curl usage (HTTP 1.1 request instead of HTTP 1.0)
#Options[soapVersion]=1 (for soap 1.1), 2 (for soap 1.1)
# NB: the following two are only useful for REST servers
#Options[method]=GET or POST (defaults to GET)
#Options[nameVariable]=... name of the GET/POST variable used to hold the webservice method name. By default it is empty, meaning that the method name will not be put in the query string but appended as last part of the url path

# more options: proxy
# If these variables are not set here, the Proxy defined globally in site.ini ProxySerrings block will be used
# (nb: a variable with an empty value is still considered to be set. To unset it, remove or comment the line)
#ProxyServer=myproxy:8080
#ProxyUser=
#ProxyPassword=


# SOAP server using wsdl: only PhpSOAP is supported
# providerUri empty means use the uri specified in the wsdl, otherwise it will be used instead of it
#[mySOAPserver]
#providerType=PhpSOAP
#providerUri=
#WSDL=http://mydomain.com/NUSOAP/Hellowsdl.php?wsdl
# soap version to be used. Defaults to soap11
#SoapVersion=soap12
#Options[]

*/ ?>